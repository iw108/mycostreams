---

x-postgres-env-variable: &postgres-env-variable
  POSTGRES_DSN: ${POSTGRES_DSN:-postgresql+asyncpg://postgres:postgres@db:5432/postgres}


x-redis-env-variable: &redis-env-variable
  REDIS_DSN: redis://redis:6379


services:
  event-ingester:
    image: mycostreams/prince-archiver:${TAG:-latest}
    build:
      context: .
    command: ["arq", "prince_archiver.entrypoints.event_ingester.WorkerSettings"]
    environment: 
      <<: *redis-env-variable
      SRC_DIR: /data
    depends_on:
      redis:
        condition: service_healthy
      prestart:
        condition: service_completed_successfully

  state-manager:
    image: mycostreams/prince-archiver:${TAG:-latest}
    command: ["arq", "prince_archiver.entrypoints.state_manager.WorkerSettings"]
    environment:
      <<: [*postgres-env-variable, *redis-env-variable]
      DATA_ARCHIVE_HOST: archive.surfsara.nl
    volumes:
      - ${SSH_HOSTS_PATH:-~/.ssh/known_hosts}:/root/.ssh/known_hosts:ro
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      prestart:
        condition: service_completed_successfully

  upload-worker:
    image: mycostreams/prince-archiver:${TAG:-latest}
    command: ["arq", "prince_archiver.entrypoints.upload_worker.WorkerSettings"]
    environment: 
      <<: *redis-env-variable
      SRC_DIR: /data
    depends_on:
      redis:
        condition: service_healthy
      prestart:
        condition: service_completed_successfully
  
  api:
    image: mycostreams/prince-archiver:${TAG:-latest}
    command: [
      "uvicorn",
      "--factory",
      "prince_archiver.entrypoints.api.app:create_app",
      "--host=0.0.0.0"
    ]
    expose:
      - 8000
    environment:
      <<: *postgres-env-variable
    depends_on:
      db:
        condition: service_healthy
      prestart:
        condition: service_completed_successfully
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`fastapi.localhost`)"

  traefik:
    image: traefik:v2.10
    ports:
      - 80:80
      - 8081:8080
    volumes:
      - "./config/traefik.toml:/etc/traefik/traefik.toml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  prestart:
    image: mycostreams/prince-archiver:${TAG:-latest}
    command: ["./prestart.sh"]
    environment:
      <<: [*postgres-env-variable, *redis-env-variable]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - "./scripts/prestart.sh:/app/prestart.sh"

  redis:
    image: redis:7.2.4
    command: ["redis-server", "--save", "60", "1"]
    ports:
      - 127.0.0.1:6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 127.0.0.1:5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  postgres_data:
  redis_data:
