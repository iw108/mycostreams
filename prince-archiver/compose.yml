---
x-env-variables: &env-variables
  DATA_DIR: /data/input/
  REDIS_DSN: redis://redis:6379
  POSTGRES_DSN: postgresql+asyncpg://postgres:postgres@db:5432/postgres


services:
  data-ingester:
    image: prince-archiver
    build:
      context: .
    command: ["arq", "prince_archiver.entrypoints.data_ingester.WorkerSettings"]
    environment: 
      <<: *env-variables
      PRINCE_SRC_DIR: /data/input
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    image: prince-archiver
    command: ["arq", "prince_archiver.entrypoints.worker.WorkerSettings"]
    environment:
      DATA_ARCHIVE_HOST: archive.surfsara.nl
      POSTGRES_DSN: postgresql+asyncpg://postgres:postgres@db:5432/postgres
      REDIS_DSN: redis://redis:6379
    volumes:
      - ${SSH_HOSTS_PATH:-~/.ssh/known_hosts}:/root/.ssh/known_hosts:ro
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  upload-worker:
    image: prince-archiver
    command: ["arq", "prince_archiver.entrypoints.upload_worker.WorkerSettings"]
    environment: 
      <<: *env-variables
      PRINCE_SRC_DIR: /data/input
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  api:
    image: prince-archiver
    command: [
      "uvicorn",
      "--factory",
      "prince_archiver.entrypoints.api.app:create_app",
      "--host=0.0.0.0"
    ]
    expose:
      - 8000
    environment:
      POSTGRES_DSN: postgresql+asyncpg://postgres:postgres@db:5432/postgres
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`fastapi.localhost`)"

  traefik:
    image: traefik:v2.10
    ports:
      - 80:80
      - 8081:8080
    volumes:
      - "./config/traefik.toml:/etc/traefik/traefik.toml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  db-migrations:
    image: prince-archiver
    command: ["alembic", "upgrade", "head"]
    environment: 
      POSTGRES_DSN: postgresql+asyncpg://postgres:postgres@db:5432/postgres
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - tools

  redis:
    image: redis:7.2.4
    command: ["redis-server", "--save", "60", "1"]
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  postgres_data:
  redis_data:
